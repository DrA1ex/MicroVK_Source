<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:actions="clr-namespace:MahApps.Metro.Actions;assembly=MahApps.Metro"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:microVk="clr-namespace:MicroVK">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="HeaderTemplate" x:Shared="False">
        <DockPanel
            x:Name="dpHeader"
            Margin="10,10,10,10"
            VerticalAlignment="Center"
            LastChildFill="True">
            <Button
                x:Name="nav"
                Width="40"
                Height="40"
                VerticalAlignment="Bottom"
                Style="{DynamicResource MetroCircleButtonStyle}"
                FontFamily="Segoe UI Symbol"
                FontSize="16"
                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}, Path=CloseCommand, Mode=OneWay}"
                DockPanel.Dock="Left"
                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:Flyout}}, Path=CloseButtonVisibility}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <actions:SetFlyoutOpenAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}}" Value="False" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Rectangle
                    Width="20"
                    Height="15"
                    Fill="{DynamicResource WindowText}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill">
                            <VisualBrush.Visual>
                                <Canvas
                                    Width="48"
                                    Height="48"
                                    Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"
                                    UseLayoutRounding="False">
                                    <Path
                                        Canvas.Left="12"
                                        Canvas.Top="15"
                                        Width="25"
                                        Height="18"
                                        Fill="{DynamicResource WindowText}"
                                        Stroke="{DynamicResource WindowBorder}"
                                        Data="F1 M 12,22L 12,26L 28.25,26L 21,33L 27.5,33L 37,24L 27.5,15L 21,15L 28.25,22L 12,22 Z "
                                        Stretch="Fill" />
                                </Canvas>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <TextBlock
                x:Name="PART_BackButton"
                Margin="15,0,0,0"
                VerticalAlignment="Center"
                Style="{StaticResource Heading2}"
                Foreground="{DynamicResource WindowText}"
                Text="{Binding}"
                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:Flyout}}, Path=TitleVisibility}" />
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}}" Value="Left">
                <Setter TargetName="nav" Property="DockPanel.Dock" Value="Right" />
                <Setter TargetName="PART_BackButton" Property="TextAlignment" Value="Right" />
                <Setter TargetName="PART_BackButton" Property="Margin" Value="0,0,15,0" />
                <Setter TargetName="nav" Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="-1" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}}" Value="Top">
                <Setter TargetName="dpHeader" Property="Margin" Value="10" />
                <Setter TargetName="nav" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type controls:Flyout}}}" Value="Bottom">
                <Setter TargetName="dpHeader" Property="Margin" Value="10" />
                <Setter TargetName="nav" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="FlyoutTemplate" TargetType="{x:Type controls:Flyout}">

        <Grid
            x:Name="root"
            Margin="{TemplateBinding Margin}"
            Background="{TemplateBinding Background}">
            <Grid.RenderTransform>
                <TranslateTransform />
            </Grid.RenderTransform>
            <Border BorderThickness="1" BorderBrush="{DynamicResource Accent}"/>
            <Border Background="Transparent" Height="16" WindowChrome.IsHitTestVisibleInChrome="False" VerticalAlignment="Top" />
            <AdornerDecorator>
                <DockPanel FocusVisualStyle="{x:Null}" Focusable="False">
                    <ContentPresenter
                        x:Name="PART_Header"
                        ContentSource="Header"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        DockPanel.Dock="Top" />
                    <ContentPresenter
                        x:Name="PART_Content"
                        Margin="5,0,0,0"
                        DockPanel.Dock="Bottom" />
                </DockPanel>
            </AdornerDecorator>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="Default" />
                    <VisualState x:Name="Hide">
                        <Storyboard x:Name="HideStoryboard">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame
                                    x:Name="hideFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame
                                    x:Name="hideFrameY"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame
                                    x:Name="fadeOutFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Show">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame
                                    x:Name="showFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame
                                    x:Name="showFrameY"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HideDirect">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ShowDirect">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource Self}}" Value="Top">
                <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
                <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource Self}}" Value="Bottom">
                <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
                <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FlyoutStyle" TargetType="{x:Type controls:Flyout}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HeaderTemplate" Value="{StaticResource HeaderTemplate}" />
        <Setter Property="Template" Value="{StaticResource FlyoutTemplate}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
    </Style>

    <Style x:Key="MetroCircleButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Ellipse
                        Margin="8"
                        Stroke="{DynamicResource BlackBrush}"
                        StrokeThickness="1"
                        SnapsToDevicePixels="True"
                        StrokeDashArray="2 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroCircleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource MetroCircleButtonFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowText}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse
                            Margin="4"
                            Fill="{TemplateBinding Background}"
                            StrokeThickness="0" />
                        <Ellipse
                            x:Name="ellipsebg"
                            Margin="4"
                            Fill="{TemplateBinding BorderBrush}"
                            StrokeThickness="0"
                            Opacity="0" />
                        <Ellipse
                            x:Name="ellipse"
                            Margin="4"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness.Left}" />
                        <ContentPresenter
                            x:Name="content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0:0:0"
                                            From="0"
                                            Storyboard.TargetName="ellipsebg"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!--  some out fading  -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0:0:0.5"
                                            Storyboard.TargetName="ellipsebg"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ellipse" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                            <Setter TargetName="ellipse" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>