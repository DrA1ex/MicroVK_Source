<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:command="clr-namespace:MicroVK.Command"
    xmlns:controls="http://firstfloorsoftware.com/ModernUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lib="clr-namespace:MicroVK.Converter"
    xmlns:loc="clr-namespace:MicroVK.My.Resources"
    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:microVk="clr-namespace:MicroVK"
    xmlns:modernui="clr-namespace:FirstFloor.ModernUI;assembly=FirstFloor.ModernUI"
    xmlns:select="clr-namespace:MicroVK.DataTemplateSelectors"
    xmlns:types="clr-namespace:MicroVK.types"
    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <lib:DateConvert x:Key="DateConvert1" />
    <lib:DateSmallConvert x:Key="DateSmallConvert1" />
    <lib:DialogGetName x:Key="DialogGetName1" />
    <lib:GetFirstName x:Key="GetFirstName1" />
    <lib:ConverterNameGet x:Key="ConverterNameGet1" />
    <lib:ConverterGetPhoto x:Key="ConverterGetPhoto1" />
    <lib:ConverterGetPhotoInDialog x:Key="ConverterGetPhotoInDialog" />
    <lib:ConvertGetMyPhoto x:Key="ConvertGetMyPhoto1" />
    <lib:ConvartReadState x:Key="ConvartReadState1" />
    <lib:NumberTo4 x:Key="numberTo4" />
    <lib:PhotoSizeToUrl x:Key="PhotoSizeToURL1" />
    <lib:LikeColorConvert x:Key="LikeColorConvert1" />
    <lib:MultiParameterConvert x:Key="MultiParameterConvert1" />
    <lib:MyVisibilityConverter x:Key="MyVisibilityConverter1" />
    <lib:MyVisibilityMultiConverter x:Key="MyVisibilityMultiConverter1" />
    <lib:PhotoToAttachments x:Key="PhotoToAttachments" />
    <lib:TypeToColor x:Key="TypeToColor1" />
    <lib:TypeToTransparent x:Key="TypeToTransparent1" />
    <lib:GetSticker x:Key="GetSticker1" />
    <lib:GetStickerThumb x:Key="GetStickerThumb1" />
    <lib:ListBoxToProduct x:Key="ListBoxToProduct1" />
    <lib:NotyficationTypeToString x:Key="NotyficationTypeToString1" />
    <lib:NotBooleanConverter x:Key="NotBooleanConverter1" />
    <lib:HideTypingTextBlock x:Key="HideTypingTextBlock" />
    <lib:DataToStringLastActivity x:Key="DataToStringLastActivity1" />
    <lib:UserIdToMargin x:Key="UserIdToMargin1" />
    <lib:SmallMessageVisiblityOut x:Key="SmallMessageVisiblityOut1" />
    <lib:SmallMessageColorOut x:Key="SmallMessageColorOut1" />
    <lib:SmallMessageFontColor x:Key="SmallMessageFontColor1" />
    <lib:FloatDialogUnreadLabelVisiblity x:Key="FloatDialogUnreadLabelVisiblity1" />
    <lib:SmileToImagePath x:Key="SmileToImagePath1" />
    <lib:DurationToTime x:Key="DurationToTime1" />
    <lib:GetMessageBodyForDialogListConverter x:Key="GetMessageBodyForDialogListConverter1" />
    <lib:MessageOutToHorizontalAlignment x:Key="MessageOutToHorizontalAlignment1" />
    <lib:UserOnlineToGeometryConvert x:Key="UserOnlineToGeometryConvert1" />
    <lib:BoolToDialogTabsBorderThickness x:Key="BoolToDialogTabsBorderThickness" />
    <lib:BoolToDockConvert x:Key="BoolToDockConvert1" />
    <lib:ActualSizeToPhotoUrl x:Key="ActualSizeToPhotoUrl"/>

    <command:ShowWindowCommand x:Key="ShowWindowCommand" />
    <command:PlayAudio x:Key="PlayAudio1" />
    <command:OpenSourceIdCommand x:Key="OpenSourceIdCommand1" />
    <command:OpenSourceIdCommandInN x:Key="OpenSourceIdCommandInN1" />
    <command:MinimizeWindowCommand x:Key="MinimizeWindowCommand1" />
    <command:RestoreWindowCommand x:Key="RestoreWindowCommand1" />
    <command:MaximizeWindowCommand x:Key="MaximizeWindowCommand1" />
    <command:CloseWindowCommand x:Key="CloseWindowCommand1" />
    <command:LikeCommand x:Key="LikeCommand1" />
    <command:OpenUrlCommand x:Key="OpenUrlCommand1" />
    <command:Feedback x:Key="FeedbackCommand1" />
    <command:CloseDialogTab x:Key="CloseDialogTab1" />
    <command:CloseAllDialogTab x:Key="CloseAllDialogTab1" />
    <command:OpenFloatWindows x:Key="OpenFloatWindows1" />
    <command:CloseFloatWindows x:Key="CloseFloatWindows" />
    <command:PlayVideoCommand x:Key="PlayVideoCommand1" />
    <command:OpenSourceFromSearchDialog x:Key="OpenSourceFromSearchDialog" />
    <command:OpenChatInfoComand x:Key="OpenChatInfoComand1" />
    <command:OpenDialogCommand x:Key="OpenDialogCommand1" />
    <command:SaveDocCommand x:Key="SaveDocCommand1" />
    <command:ShowAudioRecomendationsCommand x:Key="ShowAudioRecomendationsCommand" />
    <command:AddAudioToMyReccordCommand x:Key="AddAudioToMyReccordCommand" />
    <command:ShowLyricsCommand x:Key="ShowLyricsCommand" />
    <command:ShowViewerCommand x:Key="ShowViewerCommand" />
    <command:ShowMessagesViewCommand x:Key="ShowMessagesViewCommand" />
    <command:LoginCommand x:Key="LoginCommand" />
    <command:DelAccountCommand x:Key="DelAccountCommand" />

    <select:AttachmentDataS x:Key="AttachmentDataS1" />
    <select:ContentVKAttachmentDataS x:Key="ContentVkAttachmentDataS1" />
    <select:DialogDT x:Key="DialogDt1" />
    <select:MessageDT x:Key="MessageDT1" />
    <select:NewsDataS x:Key="NewsDataS1" />
    <select:SearhGlobalDT x:Key="SearhGlobalDt1" />
    <select:SmallMessageDT x:Key="SmallMessageDt1" />
    <select:SmileDT x:Key="SmileDT1" />
    <select:SmileItemDT x:Key="SmileItemDT1" />
    <select:WallTemplateSelector x:Key="WallTemplateSelector1" />
    <select:WallCopyHistoryTemplateSelector x:Key="WallCopyHistoryTemplateSelector1" />

    <select:PhotoVieverContainerTemplateSelector x:Key="PhotoVieverContainerTemplateSelector1" />

    <Style x:Key="CustomIconCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource LinkButtonText}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel
                        x:Name="LayoutRoot"
                        Margin="{TemplateBinding Padding}"
                        Orientation="Horizontal">
                        <Border
                            x:Name="CheckBorder"
                            Width="16"
                            Height="16"
                            Margin="0,1,4,0"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                            <Grid>
                                <Path
                                    x:Name="CheckMark"
                                    Margin="0"
                                    Fill="{TemplateBinding Foreground}"
                                    Data="{TemplateBinding Tag}"
                                    Stretch="UniformToFill" />
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsThreeState}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CheckMark" Property="Data" Value="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Data" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource LinkButtonTextHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource LinkButtonTextPressed}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ChasingDotsProgressRingStyle" TargetType="controls:ModernProgressRing">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Accent}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ModernProgressRing">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid
                            x:Name="Ring"
                            Margin="{TemplateBinding Padding}"
                            RenderTransformOrigin="0.5,0.5"
                            Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RenderTransform>
                                <RotateTransform />
                            </Grid.RenderTransform>

                            <Ellipse
                                x:Name="ProgressElement1"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Fill="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse
                                x:Name="ProgressElement2"
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Fill="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform />
                                </Ellipse.RenderTransform>
                            </Ellipse>

                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SizeStates">
                                <VisualState x:Name="Large" />
                                <VisualState x:Name="Small" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive" />
                                <VisualState x:Name="Active">
                                    <Storyboard RepeatBehavior="Forever">
                                        <ObjectAnimationUsingKeyFrames
                                            Duration="0"
                                            Storyboard.TargetName="Ring"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ProgressElement1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:1"
                                                Value="0.0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:2"
                                                Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ProgressElement1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:1"
                                                Value="0.0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:2"
                                                Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ProgressElement2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:1"
                                                Value="1.0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:2"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ProgressElement2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:1"
                                                Value="1.0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.42,0 0.58,1"
                                                KeyTime="0:0:2"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ring" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="360" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="WallListBox" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="#33000000" />
                            <!--<Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="SliderRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseSliderThumbStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{DynamicResource SliderThumbBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundDragging}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderDragging}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundDisabled}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="HorizontalSliderThumbStyle"
        BasedOn="{StaticResource BaseSliderThumbStyle}"
        TargetType="Thumb">
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="8" />
    </Style>

    <Style
        x:Key="VerticalSliderThumbStyle"
        BasedOn="{StaticResource BaseSliderThumbStyle}"
        TargetType="Thumb">
        <Setter Property="Height" Value="8" />
        <Setter Property="Width" Value="12" />
    </Style>

    <Style x:Key="SliderStyle1" TargetType="Slider">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar
                                x:Name="TopTick"
                                Grid.Row="0"
                                Height="4"
                                Fill="{DynamicResource SliderTick}"
                                Placement="Top"
                                Visibility="Collapsed" />
                            <Border
                                x:Name="TrackBackground"
                                Grid.Row="1"
                                Height="4.0"
                                Margin="5,0"
                                VerticalAlignment="center"
                                Background="{DynamicResource SliderTrackBackground}"
                                BorderBrush="{DynamicResource SliderTrackBorder}"
                                BorderThickness="1">
                                <Canvas Margin="-6,-1">
                                    <Rectangle
                                        x:Name="PART_SelectionRange"
                                        Height="4.0"
                                        Fill="{DynamicResource SliderSelectionBackground}"
                                        Stroke="{DynamicResource SliderSelectionBorder}"
                                        StrokeThickness="1.0"
                                        Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                            <TickBar
                                x:Name="BottomTick"
                                Grid.Row="2"
                                Height="4"
                                Fill="{DynamicResource SliderTick}"
                                Placement="Bottom"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="TopTick" Property="Fill" Value="{DynamicResource SliderTickDisabled}" />
                            <Setter TargetName="BottomTick" Property="Fill" Value="{DynamicResource SliderTickDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TickBar
                                        x:Name="TopTick"
                                        Grid.Column="0"
                                        Width="4"
                                        Fill="{DynamicResource SliderTick}"
                                        Placement="Left"
                                        Visibility="Collapsed" />
                                    <Border
                                        Name="TrackBackground"
                                        Grid.Column="1"
                                        Width="4.0"
                                        Margin="0,5"
                                        HorizontalAlignment="center"
                                        Background="{DynamicResource SliderTrackBackground}"
                                        BorderBrush="{DynamicResource SliderTrackBorder}"
                                        BorderThickness="1">

                                        <Canvas Margin="-1,-6">
                                            <Rectangle
                                                x:Name="PART_SelectionRange"
                                                Width="4.0"
                                                Fill="{DynamicResource SliderSelectionBackground}"
                                                Stroke="{DynamicResource SliderSelectionBorder}"
                                                StrokeThickness="1.0"
                                                Visibility="Hidden" />
                                        </Canvas>
                                    </Border>

                                    <Track Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}" />
                                        </Track.Thumb>
                                    </Track>
                                    <TickBar
                                        x:Name="BottomTick"
                                        Grid.Column="2"
                                        Width="4"
                                        Fill="{DynamicResource SliderTick}"
                                        Placement="Right"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="TopTick" Property="Fill" Value="{DynamicResource SliderTickDisabled}" />
                                    <Setter TargetName="BottomTick" Property="Fill" Value="{DynamicResource SliderTickDisabled}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LinkStyle1" TargetType="{x:Type Run}">
        <Style.Setters>
            <Setter Property="TextDecorations" Value="Underline" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Popup x:Key="SmilePopup1" StaysOpen="False">
        <Popup.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="26" />
                <Setter Property="MinWidth" Value="10" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid
                                x:Name="grid"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="border_inner"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0">
                                    <ContentPresenter
                                        x:Name="Content"
                                        HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                                    <Setter Property="Panel.ZIndex" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false" />
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" Value="2,0,-2,0" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="90" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="TabStripPlacement" Value="Top" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Margin" Value="-2,-2,-2,-1" />
                                    <Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="TabStripPlacement" Value="Bottom" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource ResourceKey=ScrollBarBackground}" />
                                    <Setter TargetName="border_inner" Property="BorderThickness" Value="0,0,0,3" />
                                    <Setter Property="Margin" Value="-2,-1,-2,-2" />
                                    <Setter TargetName="Content" Property="Margin" Value="0,1,0,0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="TabStripPlacement" Value="Left" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Margin" Value="-2,-2,-1,-2" />
                                    <Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="TabStripPlacement" Value="Right" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Margin" Value="-1,-2,-2,-2" />
                                    <Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
            </Style>
        </Popup.Resources>
        <Border
            Width="305"
            Height="200"
            Background="{DynamicResource WindowBackground}"
            BorderBrush="{DynamicResource WindowBorder}"
            BorderThickness="1">
            <TabControl
                Background="{DynamicResource ResourceKey=ScrollBarBackground}"
                BorderThickness="0"
                ContentTemplateSelector="{StaticResource SmileDT1}"
                ItemTemplateSelector="{StaticResource SmileItemDT1}"
                TabStripPlacement="Bottom" />
        </Border>
    </Popup>
    <Style x:Key="TabControlStyle1" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=ScrollBarBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="4,1,10,0"
                            Panel.ZIndex="1"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            BorderBrush="{DynamicResource WindowBorder}"
                            BorderThickness="0">
                            <Border
                                x:Name="InnerBd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost"
                                    Margin="{TemplateBinding Padding}"
                                    ContentSource="SelectedContent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="ContentPanel" Property="CornerRadius" Value="5,0,5,5" />
                            <Setter TargetName="InnerBd" Property="CornerRadius" Value="4,0,4,4" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="MaxWidth" Value="150" />
        <!--<Setter Property="MinHeight" Value="26" />-->
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border
                        x:Name="border_inner"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        d:DataContext="{d:DesignInstance microVk:MyTabItem}"
                        Visibility="{Binding Source={x:Static microVk:MySettings.Default}, Path=hideTabs, Mode=OneWay, Converter={StaticResource MyVisibilityConverter1}, ConverterParameter=inverse}">
                        <Border.ContextMenu>
                            <ContextMenu>
                                <MenuItem
                                    Command="{StaticResource OpenFloatWindows1}"
                                    CommandParameter="{Binding}"
                                    Header="{x:Static loc:Resources.unpin}"
                                    InputGestureText="Ctrl+U" />
                                <MenuItem
                                    Command="{StaticResource CloseDialogTab1}"
                                    CommandParameter="{Binding}"
                                    Header="{x:Static loc:Resources.Close}" />
                                <MenuItem Command="{StaticResource CloseAllDialogTab1}" Header="{x:Static loc:Resources.close_all}" />
                            </ContextMenu>
                        </Border.ContextMenu>
                        <Grid
                            x:Name="grid"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Image
                                x:Name="Image1"
                                Width="16"
                                Height="16"
                                Margin="0,0,4,0"
                                HorizontalAlignment="Left"
                                Source="{Binding Photo}"
                                Stretch="Uniform"
                                Visibility="{Binding IsChat, Converter={StaticResource MyVisibilityConverter1}, ConverterParameter=inverse}" />
                            <ContentPresenter
                                x:Name="Content"
                                Grid.Column="1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <Button
                                x:Name="CloseButton"
                                Grid.Column="2"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Right"
                                Style="{StaticResource MySystemButton}"
                                Foreground="White"
                                Command="{StaticResource CloseDialogTab1}"
                                CommandParameter="{Binding}"
                                Cursor="Hand"
                                Tag="{Binding Description}"
                                ToolTip="{x:Static modernui:Resources.Close}"
                                Visibility="Hidden">
                                <Button.Content>
                                    <Grid
                                        Width="13"
                                        Height="12"
                                        RenderTransform="1,0,0,1,0,1">
                                        <Path
                                            Width="8"
                                            Height="7"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                            StrokeThickness="1.5"
                                            Data="M0,0 L8,7 M8,0 L0,7 Z" />
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ItemBackgroundHover}" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="2,0,-2,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource ItemText}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Accent}" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Accent}" />
                            <Setter TargetName="Content" Property="Margin" Value="0,1,0,0" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Margin" Value="-2,-2,-1,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
    <ControlTemplate x:Key="FlipViewTemplate" TargetType="mahapps:FlipView">
        <Grid
            x:Name="root"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Border
                    x:Name="PART_GlowBorder"
                    BorderBrush="Transparent"
                    BorderThickness="4">
                    <Grid>
                        <Grid x:Name="ControlGrid" Panel.ZIndex="7">
                            <Button
                                x:Name="PART_BackButton"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Style="{DynamicResource ControlButton}">
                                <Path
                                    Canvas.Left="15.9063"
                                    Canvas.Top="14.75"
                                    Width="16"
                                    Height="18"
                                    Fill="{DynamicResource ButtonText}"
                                    Data="F1 M 22.6563,23.75L 24.6563,25.75L 31.9063,32.75L 25.4063,32.75L 15.9063,23.75L 25.4063,14.75L 31.9063,14.75L 24.6563,21.75L 22.6563,23.75 Z "
                                    Stretch="Fill" />
                            </Button>
                            <Button
                                x:Name="PART_ForwardButton"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Style="{DynamicResource ControlButton}">
                                <Path
                                    Canvas.Left="15.9063"
                                    Canvas.Top="14.75"
                                    Width="16"
                                    Height="18"
                                    Fill="{DynamicResource ButtonText}"
                                    Data="F1 M 25.1563,23.75L 23.1563,21.75L 15.9063,14.75L 22.4063,14.75L 31.9063,23.75L 22.4063,32.75L 15.9063,32.75L 23.1563,25.75L 25.1563,23.75 Z "
                                    Stretch="Fill" />
                            </Button>


                            <Button
                                x:Name="PART_UpButton"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Style="{DynamicResource ControlButton}"
                                Visibility="Hidden">
                                <Path
                                    Canvas.Left="15.9063"
                                    Canvas.Top="14.75"
                                    Width="16"
                                    Height="18"
                                    Fill="{DynamicResource BlackBrush}"
                                    Data="F1 M 23.9063,22.5L 21.9063,24.5L 14.9063,31.75L 14.9063,25.25L 23.9063,15.75L 32.9063,25.25L 32.9063,31.75L 25.9063,24.5L 23.9063,22.5 Z "
                                    Stretch="Fill" />
                            </Button>
                            <Button
                                x:Name="PART_DownButton"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                Style="{DynamicResource ControlButton}"
                                Visibility="Hidden">
                                <Path
                                    Canvas.Left="15.9063"
                                    Canvas.Top="14.75"
                                    Width="16"
                                    Height="18"
                                    Fill="{DynamicResource BlackBrush}"
                                    Data="F1 M 23.9063,25L 25.9063,23L 32.9063,15.75L 32.9063,22.25L 23.9062,31.75L 14.9063,22.25L 14.9063,15.75L 21.9063,23L 23.9063,25 Z "
                                    Stretch="Fill" />
                            </Button>
                        </Grid>


                        <Grid
                            x:Name="PART_BannerGrid"
                            Height="0"
                            VerticalAlignment="Bottom"
                            Panel.ZIndex="6"
                            Background="{DynamicResource BlackBrush}"
                            Opacity="0.85">
                            <Label
                                x:Name="PART_BannerLabel"
                                Foreground="{DynamicResource WhiteBrush}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                IsTabStop="False" />
                        </Grid>


                        <mahapps:TransitioningContentControl
                            x:Name="PART_Presenter"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Panel.ZIndex="1"
                            Content="{TemplateBinding SelectedItem}"
                            ContentTemplate="{TemplateBinding ItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsTabStop="False" />
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Trigger.Setters>
                    <Setter TargetName="PART_BackButton" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="PART_ForwardButton" Property="Visibility" Value="Hidden" />


                    <Setter TargetName="PART_UpButton" Property="Visibility" Value="Visible" />
                    <Setter TargetName="PART_DownButton" Property="Visibility" Value="Visible" />
                </Trigger.Setters>
            </Trigger>
        </ControlTemplate.Triggers>
        <ControlTemplate.Resources>
            <Style x:Key="ControlButton" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Opacity" Value="0.4" />
                <Setter Property="Panel.ZIndex" Value="5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Padding="1"
                                BorderBrush="{TemplateBinding Background}"
                                CornerRadius="4">
                                <Grid Background="{TemplateBinding Background}">
                                    <Label
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}"
                                        FontFamily="Marlett"
                                        FontSize="17">
                                        <ContentPresenter ContentSource="Content" />
                                    </Label>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1.0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="50" />
            </Style>
            <Storyboard x:Key="ShowBannerStoryboard">
                <DoubleAnimation
                    AccelerationRatio="1.0"
                    SpeedRatio="2.5"
                    Storyboard.TargetProperty="Height"
                    To="30.0" />
            </Storyboard>
            <Storyboard x:Key="HideBannerStoryboard">
                <DoubleAnimation
                    AccelerationRatio="1.0"
                    SpeedRatio="2.5"
                    Storyboard.TargetProperty="Height"
                    To="0.0" />
            </Storyboard>
            <Storyboard x:Key="HideControlStoryboard">
                <DoubleAnimation
                    AccelerationRatio="1.0"
                    SpeedRatio="2.5"
                    Storyboard.TargetProperty="Opacity"
                    To="0.0" />
            </Storyboard>
            <Storyboard x:Key="ShowControlStoryboard">
                <DoubleAnimation
                    AccelerationRatio="1.0"
                    SpeedRatio="2.5"
                    Storyboard.TargetProperty="Opacity"
                    To="1.0" />
            </Storyboard>
        </ControlTemplate.Resources>
    </ControlTemplate>
    <Style TargetType="mahapps:FlipView">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
        <Setter Property="Template" Value="{StaticResource FlipViewTemplate}" />
    </Style>

    <Style x:Key="WatermarkMuiTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity"
                                To=".2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity" />
                        </Storyboard>


                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                From=".2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity"
                                To="0" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle
                            x:Name="Base"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="FocusRectangle"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <Grid x:Name="PART_InnerGrid" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:ControlsHelper.ButtonWidth), Mode=OneWay}" />
                            </Grid.ColumnDefinitions>


                            <Border
                                x:Name="ReadOnlyVisualElement"
                                Grid.ColumnSpan="2"
                                Background="{x:Null}"
                                Opacity="0" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="0"
                                Margin="2"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False" />
                            <TextBlock
                                x:Name="Message"
                                Grid.Column="0"
                                Margin="6,2,6,2"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Opacity="0.6"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding mahapps:TextBoxHelper.Watermark}"
                                TextWrapping="Wrap"
                                Visibility="Collapsed" />
                            <Button
                                x:Name="PART_ClearText"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontFamily), Mode=OneWay}"
                                FontSize="16"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonContent), Mode=OneWay}"
                                IsTabStop="False"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{DynamicResource ControlsDisabledBrush}"
                            Stroke="{DynamicResource ControlsDisabledBrush}"
                            StrokeThickness="1"
                            Opacity="0"
                            IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>


                        <!--  multiline textbox cannot bind to actual height so take the fallbach button width  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextWrapping" Value="NoWrap" />
                                <Condition Property="AcceptsReturn" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonColumn" Property="Width" Value="{Binding ElementName=PART_InnerGrid, Path=ActualHeight, Mode=OneWay}" />
                        </MultiTrigger>


                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:TextBoxHelper.ClearTextButton)}" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <!--
                                <Setter TargetName="FocusRectangle"
                                Property="Stroke"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextboxHelper.MouseOverBorderBrush)}" />
                            -->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="ReadOnlyVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <!--
                                <Setter TargetName="FocusRectangle"
                                Property="Stroke"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=mahapps:TextboxHelper.FocusBorderBrush)}" />
                            -->
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mahapps:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>


                        <Trigger Property="mahapps:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>


                        <Trigger Property="mahapps:TextBoxHelper.IsWaitingForData" Value="True">
                            <Setter TargetName="Base" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        Opacity="0"
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="Black" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            Duration="00:00:02"
                                            From="0"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="Base"
                                            Storyboard.TargetProperty="(Effect).Opacity"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="mahapps:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="Base" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WatermarkMetroTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity"
                                To=".2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity" />
                        </Storyboard>


                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                From=".2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity"
                                To="0" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetName="Message"
                                Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle
                            x:Name="Base"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="FocusRectangle"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <Grid x:Name="PART_InnerGrid" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:ControlsHelper.ButtonWidth), Mode=OneWay}" />
                            </Grid.ColumnDefinitions>


                            <Border
                                x:Name="ReadOnlyVisualElement"
                                Grid.ColumnSpan="2"
                                Background="{x:Null}"
                                Opacity="0" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="0"
                                Margin="2"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False" />
                            <TextBlock
                                x:Name="Message"
                                Grid.Column="0"
                                Margin="6,2,6,2"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Opacity="0.6"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding mahapps:TextBoxHelper.Watermark}"
                                TextWrapping="Wrap"
                                Visibility="Collapsed" />
                            <Button
                                x:Name="PART_ClearText"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontFamily), Mode=OneWay}"
                                FontSize="16"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonContent), Mode=OneWay}"
                                IsTabStop="False"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{DynamicResource ControlsDisabledBrush}"
                            Stroke="{DynamicResource ControlsDisabledBrush}"
                            StrokeThickness="1"
                            Opacity="0"
                            IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>


                        <!--  multiline textbox cannot bind to actual height so take the fallbach button width  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextWrapping" Value="NoWrap" />
                                <Condition Property="AcceptsReturn" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonColumn" Property="Width" Value="{Binding ElementName=PART_InnerGrid, Path=ActualHeight, Mode=OneWay}" />
                        </MultiTrigger>


                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:TextBoxHelper.ClearTextButton)}" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <!--
                                <Setter TargetName="FocusRectangle"
                                Property="Stroke"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextboxHelper.MouseOverBorderBrush)}" />
                            -->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="ReadOnlyVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <!--
                                <Setter TargetName="FocusRectangle"
                                Property="Stroke"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=mahapps:TextboxHelper.FocusBorderBrush)}" />
                            -->
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mahapps:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>


                        <Trigger Property="mahapps:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>


                        <Trigger Property="mahapps:TextBoxHelper.IsWaitingForData" Value="True">
                            <Setter TargetName="Base" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        Opacity="0"
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="Black" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AutoReverse="True"
                                            Duration="00:00:02"
                                            From="0"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="Base"
                                            Storyboard.TargetProperty="(Effect).Opacity"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="mahapps:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="Base" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource LinkButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="Transparent">
                        <Path
                            Fill="{TemplateBinding Foreground}"
                            Data="{TemplateBinding Tag}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsThreeState, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Accent}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="LanguageItemDataTemplate" DataType="types:LanguageItem">
        <TextBlock>
            <Run Text="{Binding Description}" />
            <TextBlock Visibility="{Binding AutoTranslate, Converter={StaticResource MyVisibilityConverter1}}">
                (<Run Text="{x:Static loc:Resources.AutoTranslate}" />
                )</TextBlock>
        </TextBlock>
    </DataTemplate>
</ResourceDictionary>