<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="MuiExpander" TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
    </Style>


    <!--  Animated Expander Button's Template  -->
    <ControlTemplate x:Key="AnimatedExpanderTemplate" TargetType="{x:Type ToggleButton}">


        <Grid Width="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=ActualWidth}"
              HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="50*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>


            <Rectangle Grid.ColumnSpan="3"
                       Fill="Transparent"
                       StrokeThickness="0" />


            <Ellipse x:Name="OuterCircle"
                     Width="21"
                     Height="21"
                     Margin="5"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Fill="{DynamicResource ExpanderBackground}"
                     Stroke="{DynamicResource ExpanderBackground}"
                     StrokeThickness="1" />


            <Ellipse x:Name="InnerCircle"
                     Width="19"
                     Height="19"
                     Margin="5"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Fill="{DynamicResource ExpanderBackground}"
                     Stroke="{DynamicResource ButtonBorder}"
                     StrokeThickness="1" />


            <Path x:Name="Arrow"
                  Margin="5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 1,1.5 L 4.5,5 8,1.5"
                  RenderTransformOrigin="0.5,0.5"
                  Stroke="{DynamicResource Accent}"
                  StrokeThickness="2">
                <Path.RenderTransform>
                    <RotateTransform Angle="0" />
                </Path.RenderTransform>
            </Path>


            <!--  This is the control to the right of the rotating Arrow  -->
            <ContentPresenter Grid.Column="1"
                              Margin="5,0,0,0"
                              VerticalAlignment="Center" />
        </Grid>


        <!--  Animate arrow when toggled,  -->
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>


                            <!--  Timer settings, open expander rotates Arrow  -->
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="180" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>


                            <!--  Timer settings, close expander rotates Arrow back to original position  -->
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="0" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  Expands the actual content  -->
    <ControlTemplate x:Key="ExpandTheTemplate" TargetType="{x:Type Expander}">


        <Grid VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>


            <ToggleButton Content="{TemplateBinding Header}"
                          IsChecked="{Binding Path=IsExpanded,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{StaticResource AnimatedExpanderTemplate}" />


            <ContentPresenter x:Name="ExpanderContent"
                              Grid.Row="1"
                              ContentSource="Content">
                <ContentPresenter.LayoutTransform>
                    <ScaleTransform ScaleY="0" />
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
        </Grid>


        <!--  Timer settings for expanding the content  -->
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">


                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>


                            <!--  Expand out  -->
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="1" />


                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>


                            <!--  Shrink in  -->
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="0" />


                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>